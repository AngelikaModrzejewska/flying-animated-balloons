{"version":3,"sources":["Animation.js","Mountains.js","App.js","serviceWorker.js","index.js"],"names":["Animation","state","positionX","positionY","document","addEventListener","event","setNewPosition","clientX","clientY","this","props","ratioX","ratioY","window","innerWidth","innerHeight","setState","className","src","style","transform","alt","Component","Mountains","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8PAoDeA,E,4MA/CXC,MAAQ,CACJC,UAAW,EACXC,UAAW,G,kEAGM,IAAD,OAChBC,SAASC,iBAAiB,aAAa,SAACC,GAAD,OAAW,EAAKC,eAAeD,Q,2CAGpD,IAAD,OACjBF,SAASC,iBAAiB,aAAa,SAACC,GAAD,OAAW,EAAKC,eAAeD,Q,qCAG3DA,GAAQ,IACXE,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QADC,EAESC,KAAKC,MAAxBC,EAFU,EAEVA,OAAQC,EAFE,EAEFA,OAKVX,EAAYM,EAHIM,OAAOC,WAAa,EAIpCZ,EAAYM,EAHIK,OAAOE,YAAc,EAK3CN,KAAKO,SAAS,CACVf,UAAWA,GAAaU,EACxBT,UAAWA,GAAaU,M,+BAItB,IAAD,EACsBH,KAAKC,MAAxBO,EADH,EACGA,UAAWC,EADd,EACcA,IADd,EAE4BT,KAAKT,MAA9BC,EAFH,EAEGA,UAAWC,EAFd,EAEcA,UAEnB,OACI,yBACIe,UAAWA,EACXC,IAAKA,EACLC,MAAO,CACHC,UAAU,aAAD,OAAenB,EAAf,eAA+BC,EAA/B,QAEbmB,IAAI,S,GAzCIC,aCQTC,EAVG,SAACb,GACf,OACI,yBACIO,UAAWP,EAAMO,UACjBC,IAAKR,EAAMQ,IACXG,IAAI,MCyEDG,MA3Ef,WACI,OACI,yBAAKP,UAAU,OACX,yBAAKA,UAAU,iBACX,kBAAC,EAAD,CACIA,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,QACVC,IAAI,aACJP,OAAO,OACPC,OAAO,SAEX,kBAAC,EAAD,CACIK,UAAU,UACVC,IAAI,uBACJP,OAAO,OACPC,OAAO,QAEX,kBAAC,EAAD,CACIK,UAAU,UACVC,IAAI,uBACJP,OAAO,OACPC,OAAO,QAEX,kBAAC,EAAD,CACIK,UAAU,UACVC,IAAI,yBACJP,OAAO,OACPC,OAAO,QAEX,kBAAC,EAAD,CACIK,UAAU,gBACVC,IAAI,mBAER,kBAAC,EAAD,CACID,UAAU,iBACVC,IAAI,mBAER,kBAAC,EAAD,CACID,UAAU,MACVC,IAAI,gBC7DJO,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5B,SAAS6B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.69baf97b.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\n\r\nclass Animation extends Component {\r\n    state = {\r\n        positionX: 0,\r\n        positionY: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousemove', (event) => this.setNewPosition(event))\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('mousemove', (event) => this.setNewPosition(event))\r\n    }\r\n\r\n    setNewPosition(event) {\r\n        const { clientX, clientY } = event;\r\n        const { ratioX, ratioY } = this.props;\r\n\r\n        const windowCenterX = window.innerWidth / 2;\r\n        const windowCenterY = window.innerHeight / 2;\r\n\r\n        const positionX = clientX - windowCenterX;\r\n        const positionY = clientY - windowCenterY;\r\n\r\n        this.setState({\r\n            positionX: positionX * -ratioX,\r\n            positionY: positionY * -ratioY,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { className, src } = this.props;\r\n        const { positionX, positionY } = this.state;\r\n\r\n        return (\r\n            <img\r\n                className={className}\r\n                src={src}\r\n                style={{\r\n                    transform: `translate(${positionX}px, ${positionY}px)`\r\n                }}\r\n                alt=\"\"\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Animation;","import React from \"react\";\r\n\r\nconst Mountains = (props) => {\r\n    return (\r\n        <img\r\n            className={props.className}\r\n            src={props.src}\r\n            alt=\"\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default Mountains;","import React from 'react';\r\nimport './App.css';\r\nimport Animation from './Animation';\r\nimport Mountains from './Mountains';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"flying-clouds\">\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.35\"\r\n                    ratioY=\"0.32\"\r\n                />\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.25\"\r\n                    ratioY=\"0.21\"\r\n                />\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.28\"\r\n                    ratioY=\"0.34\"\r\n                />\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.52\"\r\n                    ratioY=\"0.49\"\r\n                />\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.19\"\r\n                    ratioY=\"0.63\"\r\n                />\r\n                <Animation\r\n                    className=\"cloud\"\r\n                    src=\"/cloud.png\"\r\n                    ratioX=\"0.47\"\r\n                    ratioY=\"0.25\"\r\n                />\r\n                <Animation\r\n                    className=\"balloon\"\r\n                    src=\"/air-balloon-big.png\"\r\n                    ratioX=\"0.07\"\r\n                    ratioY=\"0.3\"\r\n                />\r\n                <Animation\r\n                    className=\"balloon\"\r\n                    src=\"/air-balloon-mid.png\"\r\n                    ratioX=\"0.12\"\r\n                    ratioY=\"0.4\"\r\n                />\r\n                <Animation\r\n                    className=\"balloon\"\r\n                    src=\"/air-balloon-small.png\"\r\n                    ratioX=\"0.15\"\r\n                    ratioY=\"0.5\"\r\n                />\r\n                <Mountains\r\n                    className=\"mountain-left\"\r\n                    src=\"/mountain1.png\"\r\n                />\r\n                <Mountains\r\n                    className=\"mountain-right\"\r\n                    src=\"/mountain2.png\"\r\n                />\r\n                <Mountains\r\n                    className=\"sun\"\r\n                    src=\"/sun.png\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}